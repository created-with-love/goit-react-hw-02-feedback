{"version":3,"sources":["components/Feedback/Feedback.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistic.module.css","components/FeedbackOptions/FeedBackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/Section/Section.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","FeedBackOptions","options","onLeaveFeedback","className","s","feedback__controls","map","element","index","feedback__button","type","onClick","slice","toUpperCase","Statistic","good","neutral","bad","total","percent","statisic__list","Notification","message","notification","Section","title","children","container","container__title","Feedback","state","props","initialValue","option","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","stateArray","Object","keys","Statistics","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,aAAe,iC,gBCAjCD,EAAOC,QAAU,CAAC,mBAAqB,4CAA4C,iBAAmB,4C,gBCAtGD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,iBAAmB,oC,kBCA5ED,EAAOC,QAAU,CAAC,eAAiB,oC,mLCmBpBC,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAWC,IAAEC,mBAAlB,SACGJ,EAAQK,KAAI,SAACC,EAASC,GAAV,OACX,wBACEL,UAAWC,IAAEK,iBAEbC,KAAK,SACLC,QAAS,kBAAMT,EAAgBK,IAJjC,SAMGA,EAAQK,MAAM,EAAG,GAAGC,cAAgBN,EAAQK,MAAM,IAX3C,EAOSJ,S,iBCGVM,EAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,QAA9B,OAChB,qBAAIhB,UAAWC,IAAEgB,eAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCFWE,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,qBAAKnB,UAAWC,IAAEmB,aAAlB,SAAiCD,K,gBCMpBE,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASvB,UAAWC,IAAEuB,UAAtB,UACE,oBAAIxB,UAAWC,IAAEwB,iBAAjB,SAAoCH,IACnCC,MCCCG,E,4MAQJC,MAAQ,CACNf,KAAM,EAAKgB,MAAMC,aACjBhB,QAAS,EACTC,IAAK,G,EAGPf,gBAAkB,SAAA+B,GAChB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAASE,EAAUF,GAAU,O,EAKpCG,mBAAqB,WACnB,OAAO,EAAKN,MAAMf,KAAO,EAAKe,MAAMb,IAAM,EAAKa,MAAMd,S,EAGvDqB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKT,MAAMf,KAAO,EAAKqB,qBAAwB,M,uDAG1D,IAAD,EACwBI,KAAKV,MAA5Bf,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQsB,KAAKJ,qBACbjB,EAAUqB,KAAKH,kCACfI,EAAaC,OAAOC,KAAKH,KAAKV,OAEpC,OACE,qCACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACExB,QAASwC,EACTvC,gBAAiBsC,KAAKtC,oBAIzBa,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,cAAC,EAAD,CAASQ,MAAM,aAAf,SACE,cAACmB,EAAD,CACE7B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,QAASA,MAIb,cAAC,EAAD,CAAcG,QAAQ,6B,GAxDTuB,aAAjBhB,EACGiB,aAAe,CAEpBd,aAAc,GA4DHH,QC7DAkB,E,uKAJX,OAAO,cAAC,EAAD,CAAUf,aAAc,Q,GAFjBa,aCElBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b7d96050.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Feedback_notification__3fucW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__controls\":\"FeedbackOptions_feedback__controls__1XPjn\",\"feedback__button\":\"FeedbackOptions_feedback__button__Mau6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__EDF6L\",\"container__title\":\"Section_container__title__3C9PI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisic__list\":\"Statistic_statisic__list__60XFL\"};","import React from 'react';\nimport s from './FeedbackOptions.module.css';\n\nlet buttonsId = 1;\n\nconst FeedBackOptions = ({ options, onLeaveFeedback }) => (\n  <div className={s.feedback__controls}>\n    {options.map((element, index) => (\n      <button\n        className={s.feedback__button}\n        key={buttonsId + index}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(element)}\n      >\n        {element.slice(0, 1).toUpperCase() + element.slice(1)}\n      </button>\n    ))}\n  </div>\n);\n\nexport default FeedBackOptions;\n","import React from 'react';\nimport s from './Statistic.module.css';\n\nconst Statistic = ({ good, neutral, bad, total, percent }) => (\n  <ul className={s.statisic__list}>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {percent}%</li>\n  </ul>\n);\n\nexport default Statistic;\n","import React from 'react';\nimport s from '../Feedback/Feedback.module.css';\n\nconst Notification = ({ message }) => (\n  <div className={s.notification}>{message}</div>\n);\n\nexport default Notification;\n","import React from 'react';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={s.container}>\n    <h2 className={s.container__title}>{title}</h2>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import React, { Component } from 'react';\nimport s from './Feedback.module.css';\nimport FeedBackOptions from '../FeedbackOptions/FeedBackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Notification from '../Notification/Notification';\nimport Section from '../Section/Section';\n\nclass Feedback extends Component {\n  static defaultProps = {\n    // задаю дефолтные значения (они задаются до стейта)\n    initialValue: 0,\n  };\n  // Babel, встроеный в реакт транспилирует такой стейт в constructor\n  // после изменения любого свойства стейта будет авто-ки запускаться render\n  // переданные значение через App.js доступны через this.props.__prop_name__\n  state = {\n    good: this.props.initialValue,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.bad + this.state.neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.floor((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percent = this.countPositiveFeedbackPercentage();\n    const stateArray = Object.keys(this.state);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedBackOptions\n            options={stateArray}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        {good > 0 || neutral > 0 || bad > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              percent={percent}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","import React, { Component } from 'react';\nimport Feedback from './components/Feedback';\n\nclass App extends Component {\n  render() {\n    return <Feedback initialValue={0} />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}